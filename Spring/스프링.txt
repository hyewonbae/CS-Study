스프링이란 ?
- 공통적으로 사용가능한 객체를 관리할 수 있는 컨테이너를 제공.
- 자바의 오픈소스 애플리케이션 프레임워크 중 하나로 스프링의 기본 철학은 특정 기술에 종속되지 않고 객체를 관리할 수 있는 프레임워크를 제공하는 것이다.
- 컨테이너로 자바 객체를 관리하면서 의존성 주입과 제어의 역전을 통해 결합도를 낮추게 된다.

DI(Dependency Injection)
- 의존성 주입 : 컨테이너가 의존관계를 자동으로 연결
- 객체간의 의존관계를 설정해두면 스프링 컨테이너가 의존관계를 자동으로 연결해준다. 직접 의존관계를 생성하거나 검색해서 가져올 필요가 없어서 결합도가 낮아지는 장점이 있다.

IoC(Inversion of Control)
- 제어의 역전 : 제어권이 사용자에게 있지 않고, 프레임워크에 있어서 필요에 따라 사용자의 코드를 호출해서 사용한다.
- 스프링에서는 인스턴스의 생성부터 소멸까지 개발자가 아닌 컨테이너에서 대신 관리한다.

라이브러리 vs 프레임워크
라이브러리 : 자바에서 직접 제공하지 않고 외부에서 가져와서 쓸 수 있는 것.
프레임워크 : 전체 흐름이 정해져있고 개발자는 중간 중간 흐름을 추가해서 쓰는 것.

ORM(Object Relational Mapping)
- 관계형 데이터베이스를 OOP언어로 변환해주는 기술.
- 비즈니스 코드가 DB 테이블에 바로 접근할 수 있도록 도와준다.

JPA
- ORM을 위해 자바에서 제공하는 API
- 자바 객체와 DB 테이블을 맵핑하는데 구현체로는 하이버네이트가 있다.

ORM, JPA, Hibernate 장단점
- 장점 : 비즈니스 로직에 집중하고 객체 중심의 개발을 할 수 있게 된다. 또한 메소드를 호출하는 것만으로 쿼리를 수행해서 생산성이 향상되고 유지보수 비용이 절감. 특정 DB에 의존하지 않음
- 단점 : 직접 SQL 쿼리 호출하는 것보다 느리고 복잡한 쿼리 같은 것은 메소드로 처리하는 것이 힘들다.