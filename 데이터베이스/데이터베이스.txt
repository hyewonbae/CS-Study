DBMS란 ?
- 데이터베이스 내 데이터에 접근하도록 도와주는 시스템

트랜잭션 ?
- 데이터베이서의 무결성과 일관성을 위해 아래 4가지를 만족해야한다.
A 원자성 : 트랜잭션 작업이 부분적으로 실행되거나 중단되지 않는 것을 보장하는 것.
C 일관성 : 트랜잭션이 성공적으로 완료되면 일관적인 DB상태를 유지하는 것.
I 격리성 : 트랜잭션 수행 시 다른 트랜잭션의 작업에 끼어들지 못하도록 보장하는 것.
D 지속성 : 성공적으로 수행된 트랜잭션은 영구적으로 반영이 되는 것.

NOSQL(Not Only SQL) SQL을 보완한다는 의미
- 스키마가 없어서 데이터 조회하고 삽입하는 속도가 빠름. 또한 대량의 분산데이터를 저장하는데 특화됨.
SQL : RDBMS 관계형 데이터베이스 / 스키마가 있음.
NOSQL : 스키마가 없음 / 조인의 개념이 없음.

파티셔닝(Vertical Partitioning)
- 테이블을 컬럼 단위로 나누어 관리하는 기법
- 테이블의 일부 열을 빼내는 형태로 분할 (세로로)
장점 : update나 insert 같은 작업이 분산되어서 성능이 향상
단점 : 테이블간 join 비용이 발생, index를 별도로 파티셔닝 할 수 없음

샤딩(Horizontal Partitioning)
- 테이블을 row 단위로 분산하여 저장하는 방법 (가로로)
- Shard key를 어떻게 정의하느냐에 따라 데이터를 효율적으로 분산시키는 것이 결정
Hash Sharding : 데이터베이스 id를 hashing 하여 결정. 규칙을 한 번 정하면 바꿀 수 없다.
Dynamic Sharding : 사전에 범위 테이블을 정의해두어서 범위에 따른 데이터베이스 분할을 설정. 확장성이 좋음.