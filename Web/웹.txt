브라우저에 url을 치면 일어나는 일
1. 브라우저에서 DNS 서버에서 도메인명으로 IP 주소를 가져온다.
2. HTTP Request 메시지를 작성한다.
3. OS의 프로토콜 스택에 메시지 전송을 의뢰한다.
4. 프로토콜 스택이 LAN에 제어정보를 붙인 패킷을 LAN 어댑터에 넘긴다.
5. LAN 어댑터는 이것을 전기신호로 변환시켜 LAN 케이블로 송출한다.
6. 송신한 패킷은 허브, 스위치, 라우터를 경유해서 프로바이더에 전달이 된다.
7. 패킷은 수많은 액세스 회선을 통해서 POP를 거쳐서 인터넷 핵심부에 들어간다.
8. 많은 고속 라우터들 사이로 패킷이 상대방 서버까지 도달하게 된다.
9. 서버측의 LAN에 도착하게 되면 방화벽이 패킷을 검사한다.
10. 이상이 없을 경우에는 캐시서버가 먼저 응답 데이터가 있는지 확인한다.
11. 응답데이터가 없는 경우 웹서버에 전송한다.
12. 웹서버에 도착하면 프로토콜 스택은 패킷을 추출해서 WAS에 전달하게 된다.
13. WAS는 응답 메시지를 만들어서 위와 같은 과정을 거쳐 다시 클라이언트에게 보낸다.

쿠키와 세션
- HTTP는 상태와 연결에 대한 정보를 저장하지 않아 이를 도와주는 것.
- 쿠키 : 사용자 정보가 기록된 텍스트 파일로 브라우저에 저장되면서 통신할 때 헤더에 포함되어 전송되게 된다. 또한, HTTP 통신 중에 쿠키 정보가 노출될 수 있기 때문에 보안에 취약하다는 특징을 가지고 있다.
- 세션 : 사용자의 정보를 서버에 저장하여 브라우저가 종료될 때까지 유지되며 서버에 저장되기 때문에 보안이 강하다.

REST API, RESTful이란 ?
- REST API : REST 기반으로 서비스 API를 구현한 것.
- REST : 자원의 표현(URI), 즉 이름으로부터 자원의 정보를 주고받는 것. 자원을 URI로 표현하고 자원에 대한 행위를 HTTP Method로 표현한 것.
- RESTful : 자원을 URI로, 행위에 맞는 적절한 HTTP Method를 사용한 것이 RESTful한 메소드이다.
RESTful하지 않은 예로는 CRUD 기능을 모두 POST만으로 처리한 것.

HTTP 응답코드
클라이언트와 서버가 요청을 주고 응답을 받을 때, 응답에 대해 메시지가 아닌 코드로 상태를 반환하는 것.
- 100 : 조건부 응답, 요청을 받아서 처리중 임을 의미
- 200 : Successful Response로 Request가 성공적으로 처리됨을 의미
- 300 : Redirection으로 클라이언트를 지정된 위치로 이동함을 의미
- 400 : 클라이언트 오류로 HTTP 요청이 잘못되거나 권한이 없을 때 발생.
- 500 : 서버 오류로 서버가 요청을 제대로 수행하지 못할 때 발생.

HTTPS
- 암호화 프로토콜(SSL,TLS)을 사용하여 HTTP 통신을 안전하게 하는 프로토콜
HTTP로 통신할 경우 문제점
1. 평문 통신으로 인한 도청
2. 통신 상대를 확인하지 않아 위장 가능
3. 완전성 보장하지 않기 때문에 변조 가능